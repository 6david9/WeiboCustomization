/*
 *     Generated by class-dump 3.3.4 (64 bit).
 *
 *     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2011 by Steve Nygard.
 */

#import "NSObject.h"

@class NSMutableDictionary, NSMutableSet, NSString;

@interface FMDatabase : NSObject
{
    struct sqlite3 *_db;
    NSString *_databasePath;
    BOOL _logsErrors;
    BOOL _crashOnErrors;
    BOOL _traceExecution;
    BOOL _checkedOut;
    BOOL _shouldCacheStatements;
    BOOL _isExecutingStatement;
    BOOL _inTransaction;
    int _busyRetryTimeout;
    NSMutableDictionary *_cachedStatements;
    NSMutableSet *_openResultSets;
    NSMutableSet *_openFunctions;
}

+ (BOOL)isSQLiteThreadSafe;
+ (id)sqliteLibVersion;
+ (id)databaseWithPath:(id)arg1;
@property BOOL traceExecution; // @synthesize traceExecution=_traceExecution;
@property BOOL checkedOut; // @synthesize checkedOut=_checkedOut;
@property int busyRetryTimeout; // @synthesize busyRetryTimeout=_busyRetryTimeout;
@property BOOL crashOnErrors; // @synthesize crashOnErrors=_crashOnErrors;
@property BOOL logsErrors; // @synthesize logsErrors=_logsErrors;
@property(retain) NSMutableDictionary *cachedStatements; // @synthesize cachedStatements=_cachedStatements;
- (void)makeFunctionNamed:(id)arg1 maximumArguments:(int)arg2 withBlock:(id)arg3;
- (void)setShouldCacheStatements:(BOOL)arg1;
- (BOOL)shouldCacheStatements;
- (id)inSavePoint:(id)arg1;
- (BOOL)rollbackToSavePointWithName:(id)arg1 error:(id *)arg2;
- (BOOL)releaseSavePointWithName:(id)arg1 error:(id *)arg2;
- (BOOL)startSavePointWithName:(id)arg1 error:(id *)arg2;
- (BOOL)inTransaction;
- (BOOL)beginTransaction;
- (BOOL)beginDeferredTransaction;
- (BOOL)commit;
- (BOOL)rollback;
- (BOOL)update:(id)arg1 withErrorAndBindings:(id *)arg2;
- (BOOL)executeUpdateWithFormat:(id)arg1;
- (BOOL)executeUpdate:(id)arg1 withParameterDictionary:(id)arg2;
- (BOOL)executeUpdate:(id)arg1 withArgumentsInArray:(id)arg2;
- (BOOL)executeUpdate:(id)arg1;
- (BOOL)executeUpdate:(id)arg1 error:(id *)arg2 withArgumentsInArray:(id)arg3 orDictionary:(id)arg4 orVAList:(void *)arg5;
- (id)executeQuery:(id)arg1 withArgumentsInArray:(id)arg2;
- (id)executeQueryWithFormat:(id)arg1;
- (id)executeQuery:(id)arg1;
- (id)executeQuery:(id)arg1 withArgumentsInArray:(id)arg2 orDictionary:(id)arg3 orVAList:(void *)arg4;
- (id)executeQuery:(id)arg1 withParameterDictionary:(id)arg2;
- (void)extractSQL:(id)arg1 argumentsList:(void *)arg2 intoString:(id)arg3 arguments:(id)arg4;
- (void)bindObject:(id)arg1 toColumn:(int)arg2 inStatement:(struct sqlite3_stmt *)arg3;
- (int)changes;
- (long long)lastInsertRowId;
- (id)lastError;
- (id)errorWithMessage:(id)arg1;
- (int)lastErrorCode;
- (BOOL)hadError;
- (id)lastErrorMessage;
- (BOOL)databaseExists;
- (void)warnInUse;
- (BOOL)goodConnection;
- (BOOL)setKey:(id)arg1;
- (BOOL)rekey:(id)arg1;
- (void)setCachedStatement:(id)arg1 forQuery:(id)arg2;
- (id)cachedStatementForQuery:(id)arg1;
- (void)resultSetDidClose:(id)arg1;
- (void)closeOpenResultSets;
- (BOOL)hasOpenResultSets;
- (void)clearCachedStatements;
- (BOOL)close;
- (BOOL)openWithFlags:(int)arg1;
- (BOOL)open;
- (struct sqlite3 *)sqliteHandle;
- (id)databasePath;
- (void)dealloc;
- (void)finalize;
- (id)initWithPath:(id)arg1;

@end

