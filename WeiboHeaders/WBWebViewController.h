/*
 *     Generated by class-dump 3.3.4 (64 bit).
 *
 *     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2011 by Steve Nygard.
 */

#import "WBViewController.h"

#import "MFMailComposeViewControllerDelegate-Protocol.h"
#import "MKMapViewDelegate-Protocol.h"
#import "UIActionSheetDelegate-Protocol.h"
#import "UIGestureRecognizerDelegate-Protocol.h"
#import "UIScrollViewDelegate-Protocol.h"
#import "UIWebViewDelegate-Protocol.h"
#import "WBImageSegmentedControlDelegate-Protocol.h"
#import "WBProgressSheetDelegate-Protocol.h"

@class MGTwitterEngine, MKMapView, NSArray, NSDictionary, NSString, NSURL, NSURLRequest, UIActivityIndicatorView, UIButton, UILabel, UIPanGestureRecognizer, UITapGestureRecognizer, UIView, UIWebView, WBImageSegmentedControl, WBProgressSheet, WBToolbar, WBToolbarButtonItem;

@interface WBWebViewController : WBViewController <UIWebViewDelegate, UIScrollViewDelegate, UIActionSheetDelegate, MFMailComposeViewControllerDelegate, MKMapViewDelegate, UIGestureRecognizerDelegate, WBProgressSheetDelegate, WBImageSegmentedControlDelegate>
{
    WBImageSegmentedControl *segmentedControl;
    unsigned int browserMode;
    WBToolbar *toolbar;
    WBToolbarButtonItem *backButtonItem;
    WBToolbarButtonItem *forwardButtonItem;
    WBToolbarButtonItem *stopButtonItem;
    WBToolbarButtonItem *refreshButtonItem;
    UITapGestureRecognizer *tapGestureRecognizer;
    UIPanGestureRecognizer *panGestureRecognizer;
    NSURL *originalURL;
    NSURLRequest *request;
    NSString *HTMLString;
    NSURL *baseURL;
    UIWebView *webView;
    MKMapView *mapView;
    UIButton *leftButton;
    UIButton *rightButton;
    BOOL draggingLeftButton;
    BOOL draggingRightButton;
    NSArray *leftPoints;
    NSArray *rightPoints;
    unsigned int pointIndex;
    BOOL fullScreenMode;
    BOOL fullScrennModeBeforeDismiss;
    BOOL wantsFullScreenLayoutInitially;
    BOOL hidesToolbar;
    BOOL locatesBeforeLoading;
    BOOL locating;
    UIView *addressBarView;
    UIActivityIndicatorView *activityIndicator;
    UILabel *addressLabel;
    WBProgressSheet *progressSheet;
    MGTwitterEngine *twitterEngine;
    BOOL canReload;
    NSDictionary *parameterDictionary;
    NSDictionary *originalParameterDictionary;
}

@property(retain, nonatomic) NSDictionary *originalParameterDictionary; // @synthesize originalParameterDictionary;
@property(retain, nonatomic) NSDictionary *parameterDictionary; // @synthesize parameterDictionary;
@property(nonatomic) BOOL locatesBeforeLoading; // @synthesize locatesBeforeLoading;
@property(nonatomic) BOOL hidesToolbar; // @synthesize hidesToolbar;
@property(nonatomic) BOOL wantsFullScreenLayoutInitially; // @synthesize wantsFullScreenLayoutInitially;
@property(retain, nonatomic) NSArray *rightPoints; // @synthesize rightPoints;
@property(retain, nonatomic) NSArray *leftPoints; // @synthesize leftPoints;
@property(nonatomic) unsigned int browserMode; // @synthesize browserMode;
@property(retain, nonatomic) NSURL *baseURL; // @synthesize baseURL;
@property(retain, nonatomic) NSString *HTMLString; // @synthesize HTMLString;
@property(retain, nonatomic) NSURLRequest *request; // @synthesize request;
@property(retain, nonatomic) NSURL *originalURL; // @synthesize originalURL;
@property(readonly, nonatomic) UIWebView *webView; // @synthesize webView;
- (id)mapView:(id)arg1 viewForAnnotation:(id)arg2;
- (void)webView:(id)arg1 didFailLoadWithError:(id)arg2;
- (void)webViewDidFinishLoad:(id)arg1;
- (void)webViewDidStartLoad:(id)arg1;
- (BOOL)webView:(id)arg1 shouldStartLoadWithRequest:(id)arg2 navigationType:(int)arg3;
- (BOOL)openOtherAppIfNeededWithRequest:(id)arg1;
- (void)loadWebViewRequest;
- (void)mailComposeController:(id)arg1 didFinishWithResult:(int)arg2 error:(id)arg3;
- (void)actionSheet:(id)arg1 didDismissWithButtonIndex:(int)arg2;
- (void)requestFailed:(id)arg1 withError:(id)arg2;
- (void)AddFavUrl:(id)arg1;
- (void)basicInfoReceived:(id)arg1 forRequest:(id)arg2 responseType:(int)arg3;
- (void)showNetworkError:(id)arg1;
- (void)progressSheetDidDismiss:(id)arg1;
- (void)mailButtonPressed:(id)arg1;
- (void)moreButtonPressed:(id)arg1;
- (void)favoriteButtonPressed:(id)arg1;
- (void)stopButtonPressed:(id)arg1;
- (void)refreshButtonPressed:(id)arg1;
- (void)forwardButtonPressed:(id)arg1;
- (void)backButtonPressed:(id)arg1;
- (void)closeButtonPressed:(id)arg1;
- (void)rightButtonDidDrag:(id)arg1 withEvent:(id)arg2;
- (void)rightButtonPressed:(id)arg1;
- (void)leftButtonDidDrag:(id)arg1 withEvent:(id)arg2;
- (void)leftButtonPressed:(id)arg1;
- (void)resetFloatingButtons;
- (void)updateControls;
- (void)showAddressBar;
- (void)hideAddressBar;
- (void)hideAddressBarAfterDelay:(double)arg1;
- (void)layout:(BOOL)arg1;
- (void)layout;
- (void)handlePanGesture:(id)arg1;
- (void)handleTapGesture:(id)arg1;
- (BOOL)gestureRecognizer:(id)arg1 shouldRecognizeSimultaneouslyWithGestureRecognizer:(id)arg2;
- (void)hideMap;
- (void)showMapWithCoordinate:(CDStruct_2c43369c)arg1;
- (BOOL)isShowingMap;
- (void)onSegmentChanged:(id)arg1;
- (void)willAnimateRotationToInterfaceOrientation:(int)arg1 duration:(double)arg2;
- (BOOL)shouldAutorotateToInterfaceOrientation:(int)arg1;
- (void)applicationDidChangeStatusBarOrientationNotification:(id)arg1;
- (void)applicationWillChangeStatusBarFrameNotification:(id)arg1;
- (void)locationManagerDidFailToLocateNotification:(id)arg1;
- (void)locationManagerDidFinishLocatingNotification:(id)arg1;
- (void)locate;
- (void)preload;
- (void)dismissViewController;
- (void)viewWillDisappear:(BOOL)arg1;
- (void)viewDidAppear:(BOOL)arg1;
- (void)viewWillAppear:(BOOL)arg1;
- (void)viewDidUnload;
- (void)viewDidLoad;
- (void)dealloc;
- (void)recreateWebView;
- (id)validURL;
- (id)initWithFileURL:(id)arg1;
- (id)initWithHTMLString:(id)arg1 baseURL:(id)arg2;
- (id)initWithRequest:(id)arg1;
- (id)initWithURL:(id)arg1 browserMode:(unsigned int)arg2 withParameter:(id)arg3;
- (id)initWithURL:(id)arg1 browserMode:(unsigned int)arg2;
- (id)initWithURL:(id)arg1 withParameter:(id)arg2;
- (id)initWithURL:(id)arg1;
- (id)initWithURLString:(id)arg1 browserMode:(unsigned int)arg2;
- (id)initWithURLString:(id)arg1;
- (id)initWithNibName:(id)arg1 bundle:(id)arg2;

@end

