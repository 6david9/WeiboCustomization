/*
 *     Generated by class-dump 3.3.4 (64 bit).
 *
 *     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2011 by Steve Nygard.
 */

#import "NSThread.h"

@class NSLock, WBRunLoopSource, WBTask, WBTaskQueue;

@interface WBWorker : NSThread
{
    unsigned int _taskType;
    WBTaskQueue *_taskQueue;
    WBTask *_currentTask;
    WBRunLoopSource *_source;
    int _state;
    BOOL _actionByUser;
    NSLock *_stateLock;
}

+ (id)addTask:(id)arg1 toQueue:(id)arg2;
+ (id)startWithTaskQueue:(id)arg1;
+ (unsigned int)taskType;
@property(nonatomic) int state; // @synthesize state=_state;
@property(readonly, nonatomic) WBRunLoopSource *source; // @synthesize source=_source;
@property(readonly, nonatomic) WBTaskQueue *taskQueue; // @synthesize taskQueue=_taskQueue;
@property(readonly, nonatomic) unsigned int taskType; // @synthesize taskType=_taskType;
- (void)updateTaskQueueAfterFinish;
- (void)goOn;
- (void)pauseCurrent:(BOOL)arg1;
- (void)pause;
- (void)cancel;
- (void)main;
- (void)work;
- (void)requestNextTask;
- (void)processTask;
- (void)processAsyncTask;
- (void)taskDidFinish;
- (void)asyncExecuteTaskRunLoop;
- (BOOL)asyncExecuteTask;
- (BOOL)syncExecuteTask;
- (void)showInfo:(id)arg1;
- (void)showInfoOnMainThread:(id)arg1;
- (void)showAlert:(id)arg1;
- (void)showAlertOnMainThread:(id)arg1;
- (void)dealloc;
- (id)initWithTaskQueue:(id)arg1;
- (id)init;

@end

